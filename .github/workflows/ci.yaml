name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Python)
        run: pip install -r requirements.txt

      - name: Install C++ build dependencies
        run: brew install cmake clang-format cppcheck # Installer des outils pour C++

      - name: Run Black (Python Formatter)
        run: black --check . # Vérifie si le code Python est bien formaté

      - name: Run Flake8 (Python Linter)
        run: flake8 --exclude=.venv,build . # Exécute le linting pour Python

      - name: Run ClangFormat (C++ Formatter)
        run: find core -type f \( -name "*.cpp" -o -name "*.h" \) -exec clang-format -i {} + # Formate les fichiers C++

      - name: Run Cppcheck (C++ Linter)
        run: cppcheck core/ # Exécute le linting pour C++

      - name: Build the C++ extension
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .

      - name: Run Python tests
        run: pytest tests/
