name: Setup, Build, Lint, and Test

on:
  push:
  pull_request:

jobs:
  setup:
    runs-on: macos-latest
    outputs:
      cache-hit: ${{ steps.cache-dependencies.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            /usr/local/Homebrew/Library/Homebrew/vendor/bundle/ruby/2.6.0
          key: ${{ runner.os }}-cache-${{ hashFiles('requirements.txt') }}

      - name: Install Python dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - name: Install C++ build dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: brew install cmake pybind11 clang-format cppcheck

  build:
    runs-on: macos-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build the C++ extension
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .

  lint:
    runs-on: macos-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Black (Python Formatter)
        run: black --check .

      - name: Run Flake8 (Python Linter)
        run: flake8 --exclude=.venv,build .

      - name: Run ClangFormat (C++ Formatter)
        run: find core -type f \( -name "*.cpp" -o -name "*.h" \) -exec clang-format -i {} +

      - name: Run Cppcheck (C++ Linter)
        run: cppcheck core/

  test:
    runs-on: macos-latest
    needs: [setup, build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Python tests
        run: pytest tests/
