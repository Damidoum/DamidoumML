name: Setup and Test

on:
  push:
  pull_request:

jobs:
  setup:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install C++ build dependencies
        run: brew install cmake pybind11 clang-format cppcheck

  formatting:
    runs-on: macos-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install ClangFormat
        run: brew install clang-format

      - name: Run Ruff Formatter (Python Formatter)
        run: ruff check --fix .

      - name: Run Ruff (Python Linter + Formatter)
        run: ruff format  --check .

      - name: Run MyPy (Python Type Checker)
        run: mypy .

      - name: Run ClangFormat (C++ Formatter)
        run: find damidoumML -type f \( -name "*.cpp" -o -name "*.h" \) -exec clang-format -i {} +

  linting:
    runs-on: macos-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install C++ build dependencies
        run: brew install cppcheck

      - name: Run Cppcheck (C++ Linter)
        run: cppcheck damidoumML/

  build:
    runs-on: macos-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install C++ build dependencies
        run: brew install cmake pybind11 clang-format

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Build Python extension
        run: pip install .

      - name: Build the C++ extension
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .

  tests:
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Create virtual environment
        run: python -m venv .venv

      - name: Install C++ build dependencies
        run: brew install cmake pybind11 clang-format

      - name: Install Python dependencies
        run: |
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Build Python extension
        run: |
          source .venv/bin/activate
          pip install .

      - name: Run Python tests
        run: |
          source .venv/bin/activate
          pytest python/tests
